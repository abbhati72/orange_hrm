{"name": "test_login_config_read_T001", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '..\\\\ScreenShots\\\\testcase+test_login_config_read_T00120250618_215728.png'", "trace": "self = <test_orange_hrn_login_001.Test_Login_Class object at 0x000001C3DC545BB0>\n\n    def test_login_config_read_T001(self):\n        logger.info(\"inside test_login_config_read executing test case T001\")\n        self.driver.get(self.login_url)\n        time.sleep(10)\n        self.lp = Login_Page_class(self.driver)\n        self.lp.enterusername(readConfigClass.read_data_username())\n        self.lp.enterpassword(readConfigClass.read_data_password())\n        time.sleep(4)\n        self.lp.click_login_btn()\n    \n        if self.lp.verify_login() == 'pass':\n            path = TakeScreenShoteUtil.takeScreenShots(self.driver, \"test_login_config_read_T001\")\n>           allure.attach.file(path, name=\"User login Successfully\", attachment_type=allure.attachment_type.PNG)\n\nTestData\\test_orange_hrn_login_001.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\allure_commons\\_allure.py:213: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nvenv\\lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\nvenv\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\lib\\site-packages\\allure_pytest\\listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nvenv\\lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nvenv\\lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\nvenv\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\lib\\site-packages\\allure_commons\\logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\nC:\\Users\\home\\AppData\\Local\\Programs\\Python\\Python39\\lib\\shutil.py:444: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = '..\\\\ScreenShots\\\\testcase+test_login_config_read_T00120250618_215728.png'\ndst = WindowsPath('D:/CRED_2025/CRE_2025/pythonProject2/AllureReports/59d379f5-471c-4b8c-8992-7eab2cf6536e-attachment.png')\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: '..\\\\ScreenShots\\\\testcase+test_login_config_read_T00120250618_215728.png'\n\nC:\\Users\\home\\AppData\\Local\\Programs\\Python\\Python39\\lib\\shutil.py:264: FileNotFoundError"}, "attachments": [{"name": "User login Successfully", "source": "59d379f5-471c-4b8c-8992-7eab2cf6536e-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "b3b95ed1-b0f6-45aa-881b-e141aaf76122-attachment.txt", "type": "text/plain"}], "start": 1750264026765, "stop": 1750264048784, "uuid": "f44077c7-2166-4943-9cd1-7e8ebf12ba56", "historyId": "913e3e6b56f9604bd844bf70ac0bfc23", "testCaseId": "913e3e6b56f9604bd844bf70ac0bfc23", "fullName": "TestData.test_orange_hrn_login_001.Test_Login_Class#test_login_config_read_T001", "labels": [{"name": "parentSuite", "value": "TestData"}, {"name": "suite", "value": "test_orange_hrn_login_001"}, {"name": "subSuite", "value": "Test_Login_Class"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "29700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestData.test_orange_hrn_login_001"}]}